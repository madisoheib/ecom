version: '3.8'

services:
  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: ecommerce_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/nginx:/var/log/nginx
    depends_on:
      - php
    networks:
      - ecommerce

  # PHP-FPM Application
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ecommerce_php
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      - ./storage/logs/php:/var/log/php
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - mysql
      - redis
    networks:
      - ecommerce

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ecommerce_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: laravel_ecommerce
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - ecommerce

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password
    networks:
      - ecommerce

  # Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ecommerce_queue
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
      - redis
    command: php artisan queue:work --tries=3 --timeout=90
    networks:
      - ecommerce

  # Task Scheduler
  scheduler:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ecommerce_scheduler
    restart: unless-stopped
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
      - redis
    command: sh -c "while true; do php artisan schedule:run; sleep 60; done"
    networks:
      - ecommerce

  # Mailhog (Development Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecommerce_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web interface
    networks:
      - ecommerce

  # Node.js for development (optional)
  node:
    image: node:18-alpine
    container_name: ecommerce_node
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: sh -c "npm install && npm run dev"
    ports:
      - "5173:5173"  # Vite dev server
    networks:
      - ecommerce
    profiles:
      - development

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  ecommerce:
    driver: bridge